version: "3.9"

volumes:
  db-data-master-1:
    name: socialnetwork-db-master-1
  db-data-replica-1:
    name: socialnetwork-db-replica-1
  db-data-replica-2:
    name: socialnetwork-db-replica-2
  grafana-data:
    name: socialnetwork-grafana-data
  prometheus-data:
    name: socialnetwork-prometheus-data
  redis-data:
    name: socialnetwork-redis-data
  citus-coordinator-data-all:
    name: citus-coordinator-data
  citus-worker-1-data:
    name: citus-worker-1-data
  citus-worker-2-data:
    name: citus-worker-2-data
  citus-worker-3-data:
    name: citus-worker-3-data
  rabbitmq-data:
    name: rabbitmq-data

services:
  test-runner:
    build:
      context: ./docker-settings
      dockerfile: Dockerfile.TestRunner
    container_name: test-runner
    networks:
      - sn-network
    depends_on:
      - haproxy
      - nginx
    tty: true
    stdin_open: true
    command: ["/bin/sh"]
    volumes:
      - ./docker-settings/tests/test.sql:/test.sql
  
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./docker-settings/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8090:80"
    depends_on:
      - socialnetwork-api-1
      - socialnetwork-api-2
    networks:
      - sn-network
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "1G"

  socialnetwork-api-1:
    build:
      context: ./src
      dockerfile: SocialNetworkApi/Dockerfile
    container_name: socialnetwork-api-1
    depends_on:
      - socialnetwork-db-master
      - citus-coordinator
      - rabbitmq
      - redis
    environment:
      - HTTP_PORT=8080
      - DatabaseSettings__MasterConnectionString=Server=socialnetwork-db-master;Port=5432;Database=socialnetwork;User ID=postgres_user;Password=!QAZ2wsx;No Reset On Close=true; Include Error Detail=true
      #- DatabaseSettings__ReplicaConnectionStrings__0=Server=socialnetwork-db-replica-1;Port=5432;Database=socialnetwork;User ID=postgres_user;Password=!QAZ2wsx;No Reset On Close=true; Include Error Detail=true
      #- DatabaseSettings__ReplicaConnectionStrings__1=Server=socialnetwork-db-replica-2;Port=5432;Database=socialnetwork;User ID=postgres_user;Password=!QAZ2wsx;No Reset On Close=true; Include Error Detail=true
      - DatabaseSettings__ReplicaConnectionString=Server=haproxy;Port=5432;Database=socialnetwork;User ID=postgres_user;Password=!QAZ2wsx;No Reset On Close=true; Include Error Detail=true
      #      - DialogDbSettings__PostgreSqlDbSettings__MasterConnectionString=Server=citus-coordinator;Port=5432;Database=socialnetwork;User ID=postgres_user;Password=!QAZ2wsx;No Reset On Close=true; Include Error Detail=true
      #      - DialogDbSettings__UseTarantoolDb=True
      #      - DialogDbSettings__TarantoolDbSettings__Host=tarantool-db
      #      - DialogDbSettings__TarantoolDbSettings__Port=3301
      #      - DialogDbSettings__TarantoolDbSettings__SpaceName=dialog_messages
      - DialogService__GrpcConnectionString=http://socialnetwork-dialog-grpc-1:6000/
      - Jwt__Key=vsjq3w7QS+5deEzxVBrEGTwUC58tgxt9FVK3QUYR6pM=
      - Jwt__Issuer=socialnetwork.com
      - Jwt__Audience=socialnetwork.com
      - Cache__Enable=True
      - Cache__RedisConnection=redis:6379
      - Cache__TimeToLive=01:00:00
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__Exchange=PostFeedExchange
      - RabbitMQ__Queue=PostFeedQueue
      - RabbitMQ__RoutingKeyPrefix=feed.user.
      - Serilog__Using__0=Serilog.Sinks.Console
      - Serilog__MinimumLevel=Debug
      - Serilog__WriteTo__0__Name=Console
      - Serilog__WriteTo__0__Args__outputTemplate={Timestamp:yyyy-MM-dd HH:mm:ss} [{Level:u3}] {Properties} {Message:lj}{NewLine}{Exception}
    ports:
      - "5001:8080"
    networks:
      - sn-network
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: "2G"
          
  socialnetwork-api-2:
    build:
      context: ./src
      dockerfile: SocialNetworkApi/Dockerfile
    container_name: socialnetwork-api-2
    depends_on:
      - socialnetwork-db-master
      - citus-coordinator
      - rabbitmq
      - redis
    environment:
      - HTTP_PORT=8080
      - DatabaseSettings__MasterConnectionString=Server=socialnetwork-db-master;Port=5432;Database=socialnetwork;User ID=postgres_user;Password=!QAZ2wsx;No Reset On Close=true; Include Error Detail=true
      - DatabaseSettings__ReplicaConnectionString=Server=haproxy;Port=5432;Database=socialnetwork;User ID=postgres_user;Password=!QAZ2wsx;No Reset On Close=true; Include Error Detail=true
      - DialogService__GrpcConnectionString=http://socialnetwork-dialog-grpc-1:6000/
      - Jwt__Key=vsjq3w7QS+5deEzxVBrEGTwUC58tgxt9FVK3QUYR6pM=
      - Jwt__Issuer=socialnetwork.com
      - Jwt__Audience=socialnetwork.com
      - Cache__Enable=True
      - Cache__RedisConnection=redis:6379
      - Cache__TimeToLive=01:00:00
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__Exchange=PostFeedExchange
      - RabbitMQ__Queue=PostFeedQueue
      - RabbitMQ__RoutingKeyPrefix=feed.user.
      - Serilog__Using__0=Serilog.Sinks.Console
      - Serilog__MinimumLevel=Debug
      - Serilog__WriteTo__0__Name=Console
      - Serilog__WriteTo__0__Args__outputTemplate={Timestamp:yyyy-MM-dd HH:mm:ss} [{Level:u3}] {Properties} {Message:lj}{NewLine}{Exception}
    ports:
      - "5002:8080"
    networks:
      - sn-network
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: "2G"

  socialnetwork-dialog-grpc-1:
    build:
      context: ./src
      dockerfile: SocialNetwork.Dialog.Grpc/Dockerfile
    container_name: socialnetwork-dialog-grpc-1
    depends_on:
      - tarantool-db
    environment:
      # - HTTP_PORT=8090
      - GRPC_PORT=6000
      - DialogDbSettings__PostgreSqlDbSettings__MasterConnectionString=Server=citus-coordinator;Port=5432;Database=socialnetwork;User ID=postgres_user;Password=!QAZ2wsx;No Reset On Close=true; Include Error Detail=true
      - DialogDbSettings__UseTarantoolDb=True
      - DialogDbSettings__TarantoolDbSettings__Host=tarantool-db
      - DialogDbSettings__TarantoolDbSettings__Port=3301
      - DialogDbSettings__TarantoolDbSettings__SpaceName=dialog_messages
      - Serilog__Using__0=Serilog.Sinks.Console
      - Serilog__MinimumLevel=Debug
      - Serilog__WriteTo__0__Name=Console
    ports:
      - "5011:8090"
      - "6011:6000"
    networks:
      - sn-network

  socialnetwork-dbmigrator-1:
    build:
      context: ./src
      dockerfile: SocialNetwork.DbMigrator/Dockerfile
    container_name: socialnetwork-dbmigrator-1
    depends_on:
      - socialnetwork-db-master
    environment:
      - RUN_OPTIONS=migrateUp
      - DatabaseSettings__MasterConnectionString=Server=socialnetwork-db-master;Port=5432;Database=socialnetwork;User ID=postgres_user;Password=!QAZ2wsx;No Reset On Close=true; Include Error Detail=true
      - Serilog__Using__0=Serilog.Sinks.Console
      - Serilog__MinimumLevel=Debug
      - Serilog__WriteTo__0__Name=Console
    ports:
      - "5010:8080"
    networks:
      - sn-network

  socialnetwork-db-master:
    image: postgres:latest
    container_name: socialnetwork-db-master
    user: postgres  # Run the container as the postgres user
    environment:
      POSTGRES_DB: socialnetwork
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: "!QAZ2wsx"
    volumes:
      - db-data-master-1:/var/lib/postgresql/data
      - ./replication-data:/master_backup
      - ./docker-settings/hw3.master_setup.sh:/replication/hw3.master_setup.sh
    ports:
      - "5400:5432"
    networks:
      - sn-network

  haproxy:
    image: haproxy:latest
    container_name: haproxy
    volumes:
      - ./docker-settings/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "5410:5432"  # Проксирование PostgreSQL
      - "8404:8404"  # Проксирование статистики HAProxy
    depends_on:
      - socialnetwork-db-replica-1
      - socialnetwork-db-replica-2
    networks:
      - sn-network
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "1G"

  socialnetwork-db-replica-1:
    # image: postgres:latest
    build:
      context: ./docker-settings
      dockerfile: Dockerfile.PostgreSql.Replica
    container_name: socialnetwork-db-replica-1
    user: "postgres"
    environment:
      POSTGRES_DB: socialnetwork
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: "!QAZ2wsx"
    volumes:
      - db-data-replica-1:/var/lib/postgresql/data
      #- ./replication-data:/master_backup
    ports:
      - "5401:5432"
    networks:
      - sn-network
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: "2G"

  socialnetwork-db-replica-2:
    # image: postgres:latest
    build:
      context: ./docker-settings
      dockerfile: Dockerfile.PostgreSql.Replica
    container_name: socialnetwork-db-replica-2
    user: "postgres"
    environment:
      POSTGRES_DB: socialnetwork
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: "!QAZ2wsx"
    volumes:
      - db-data-replica-2:/var/lib/postgresql/data
      #- ./replication-data:/master_backup
    ports:
      - "5402:5432"
    networks:
      - sn-network
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: "2G"
      

  # sharding
  #  citus-membership-manager:
  #    image: citusdata/membership-manager:latest
  #    container_name: citus-membership-manager
  #    depends_on:
  #      - citus-coordinator
  #      - citus-worker-1
  #      - citus-worker-2
  #      - citus-worker-3
  #    environment:
  #      COORDINATOR_HOST: citus-coordinator
  #      COORDINATOR_PORT: 5432
  #      COORDINATOR_DATABASE: socialnetwork
  #      COORDINATOR_USERNAME: postgres_user
  #      COORDINATOR_PASSWORD: "!QAZ2wsx"
  #      WORKER_NODES: citus-worker-1:5432,citus-worker-2:5432,citus-worker-3:5432
  #    networks:
  #      - sn-network

  citus-coordinator:
    image: citusdata/citus:latest
    container_name: citus-coordinator
    environment:
      POSTGRES_DB: socialnetwork
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: "!QAZ2wsx"
      POSTGRES_HOST_AUTH_METHOD: "trust"
    command: [ "postgres", "-c", "wal_level=logical" ]
    volumes:
      - citus-coordinator-data-all:/var/lib/postgresql
    ports:
      - "5500:5432"
    networks:
      - sn-network

  citus-worker-1:
    image: citusdata/citus:latest
    container_name: citus-worker-1
    environment:
      POSTGRES_DB: socialnetwork
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: "!QAZ2wsx"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      CITUS_HOST: "citus-coordinator"
    command: [ "postgres", "-c", "wal_level=logical" ]
    volumes:
      - citus-worker-1-data:/var/lib/postgresql/data
    ports:
      - "5501:5432"
    depends_on:
      - citus-coordinator
    networks:
      - sn-network
  
  citus-worker-2:
    image: citusdata/citus:latest
    container_name: citus-worker-2
    environment:
      POSTGRES_DB: socialnetwork
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: "!QAZ2wsx"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      CITUS_HOST: "citus-coordinator"
    command: [ "postgres", "-c", "wal_level=logical" ]
    volumes:
      - citus-worker-2-data:/var/lib/postgresql/data
    ports:
      - "5502:5432"
    depends_on:
      - citus-coordinator
    networks:
      - sn-network

  citus-worker-3:
    image: citusdata/citus:latest
    container_name: citus-worker-3
    environment:
      POSTGRES_DB: socialnetwork
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: "!QAZ2wsx"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      CITUS_HOST: "citus-coordinator"
    command: ["postgres", "-c", "wal_level=logical"]
    volumes:
      - citus-worker-3-data:/var/lib/postgresql/data
    ports:
      - "5503:5432"
    depends_on:
      - citus-coordinator
    networks:
      - sn-network
  
  #  membership-manager:
  #    image: citusdata/membership-manager
  #    container_name: membership-manager
  #    environment:
  #      COORDINATOR_HOST: citus-coordinator
  #      COORDINATOR_PORT: 5432
  #      COORDINATOR_DATABASE: socialnetwork
  #      COORDINATOR_USER: postgres_user
  #      COORDINATOR_PASSWORD: "!QAZ2wsx"
  #    depends_on:
  #      - citus-coordinator
  #      - citus-worker-1
  #      - citus-worker-2
  #    networks:
  #      - citus-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # Порт для работы RabbitMQ
      - "15672:15672" # Порт для панели управления RabbitMQ
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - sn-network

  # cache
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - sn-network
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: "local:redis:6379"
    depends_on:
      - redis
    networks:
      - sn-network

  tarantool-db:
    #image: tarantool/tarantool:latest
    build:
      context: ./docker-settings
      dockerfile: Dockerfile.Tarantool
    container_name: tarantool-db
    ports:
      - "3301:3301"
    volumes:
      - ./docker-settings/volumes/tarantool:/var/lib/tarantool  # Локальная папка tarantool монтируется в контейнер
    environment:
      TARANTOOL_USER_NAME: admin
      TARANTOOL_USER_PASSWORD: password
      TARANTOOL_WAL_MODE: none
      #TT_WAL_MODE: none
    #command: tarantool /opt/tarantool/init.lua  # Указываем путь к файлу конфигурации
    networks:
      - sn-network

  # exporter for docker container metrics
  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - sn-network

  # exporter for db metrics
  exporter-postgres-master:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: exporter-postgres-master
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres_user:!QAZ2wsx@socialnetwork-db-master:5432/socialnetwork?sslmode=disable"
    ports:
      - "9190:9187"
    volumes:
      - ./docker-settings/hw3.master_setup.sh:/docker-entrypoint-initdb.d/hw3.master_setup.sh
      - ./docker-settings/postgres_exporter.yml:/postgres_exporter.yml
    depends_on:
      - socialnetwork-db-master
    networks:
      - sn-network

  exporter-postgres-replica-1:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: exporter-postgres-replica-1
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres_user:!QAZ2wsx@socialnetwork-db-replica-1:5432/socialnetwork?sslmode=disable"
    ports:
      - "9191:9187"
    volumes:
      - ./docker-settings/postgres_exporter.yml:/postgres_exporter.yml
    depends_on:
      - socialnetwork-db-replica-1
    networks:
      - sn-network

  exporter-postgres-replica-2:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: exporter-postgres-replica-2
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres_user:!QAZ2wsx@socialnetwork-db-replica-2:5432/socialnetwork?sslmode=disable"
    ports:
      - "9192:9187"
    volumes:
      - ./docker-settings/postgres_exporter.yml:/postgres_exporter.yml
    depends_on:
      - socialnetwork-db-replica-2
    networks:
      - sn-network
  
  # exporter for redis
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    ports:
      - "9121:9121"
    environment:
      REDIS_ADDR: "redis:6379"
    depends_on:
      - redis
    networks:
      - sn-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./docker-settings/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - cadvisor
      - exporter-postgres-master
    networks:
      - sn-network
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=!QAZ2wsx
    ports:
      - "3000:3000"
    networks:
      - sn-network

networks:
  sn-network:
    driver: bridge